"use strict";(self.webpackChunk_kne_components_react_icon=self.webpackChunk_kne_components_react_icon||[]).push([[690],{5690:(n,e,t)=>{t.r(e),t.d(e,{default:()=>d,manifest:()=>s});var a=t(84494),o=t(55199),c=t(16052),r=t(89946),i=t(13050);const d={ReactIcon:{name:"react-icon",summary:"<p>\u53ef\u4ee5\u663e\u793a\u4e00\u4e2a\u56fe\u6807\uff0c\u56fe\u6807\u5fc5\u987b\u5728\u5b57\u4f53\u6587\u4ef6\u4e2d\u88ab\u5b9a\u4e49\u8fc7</p>",description:"\u7528\u4e8e\u5c06\u4e00\u4e2afont\u6216svg\u5c55\u793a\u4e3a\u4e00\u4e2a\u56fe\u6807\u7ec4\u4ef6.",packageName:"@kne/react-icon",api:'<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>\u56fe\u6807\u7c7b\u578b\uff0c\u53c2\u8003\u793a\u4f8b\u4e0b\u7684\u5b57\u7b26\u4e32</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>colorful</td>\n<td>\u662f\u5426\u662f\u5f69\u8272\u56fe\u6807</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>\u56fe\u6807\u524d\u7f00</td>\n<td>string</td>\n<td>""</td>\n</tr>\n<tr>\n<td>size</td>\n<td>\u56fe\u6807\u5927\u5c0f</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>',example:{isFull:!0,className:"react_icon_c6add",style:".react_icon_c6add .item {\n  width: 150px;\n  word-break: break-all;\n}\n.react_icon_c6add .item .ant-typography {\n  position: relative;\n}\n.react_icon_c6add .item .ant-typography-copy {\n  visibility: hidden;\n  position: absolute;\n  right: -20px;\n}\n.react_icon_c6add .item:hover .ant-typography-copy {\n  visibility: visible;\n}",list:[{title:"\u8fd9\u91cc\u586b\u5199\u793a\u4f8b\u6807\u9898",description:"\u8fd9\u91cc\u586b\u5199\u793a\u4f8b\u8bf4\u660e",code:'const {default: Icon} = _Icon;\nconst {Slider, Space, Typography} = antd;\nconst {useState} = React;\nconst {createWithFetch} = ReactFetch;\nconst {default: axios} = _axios;\nconst {createWithRemoteLoader} = remoteLoader;\n\nconst BaseExample = createWithRemoteLoader({\n    modules: ["components-iconfont:Font"],\n})(({remoteModules}) => {\n    const [Font] = remoteModules;\n    const [value, setValue] = useState(30);\n    return (\n        <Space direction="vertical">\n            <Space>\n                <div>\u8c03\u6574\u5927\u5c0f:</div>\n                <Slider\n                    style={{width: 100}}\n                    max={60}\n                    min={12}\n                    value={value}\n                    onChange={setValue}\n                />\n                <div>{value}px</div>\n            </Space>\n            {\n                <Font>\n                    {({list}) => {\n                        return (\n                            <Space wrap align="top" size="large">\n                                {list.map(({name, font_class}) => {\n                                    return (\n                                        <Space\n                                            className="item"\n                                            direction="vertical"\n                                            align="center"\n                                            key={name}\n                                        >\n                                            <Icon type={font_class} size={value}/>\n                                            <Typography.Text\n                                                copyable={{\n                                                    text:\n                                                        \'<Icon type="\' +\n                                                        font_class +\n                                                        \'" size={\' +\n                                                        value +\n                                                        "} />",\n                                                }}\n                                            >\n                                                {font_class}\n                                            </Typography.Text>\n                                            <div>{name}</div>\n                                        </Space>\n                                    );\n                                })}\n                            </Space>\n                        );\n                    }}\n                </Font>\n            }\n        </Space>\n    );\n});\n\nrender(<BaseExample/>);\n\n',scope:[{name:"_Icon",packageName:"@kne/current-lib_react-icon",component:a},{name:"antd",packageName:"antd",component:o},{name:"ReactFetch",packageName:"@kne/react-fetch",component:c},{name:"_axios",packageName:"axios",component:r},{name:"remoteLoader",packageName:"@kne/remote-loader",component:i}]},{title:"\u8fd9\u91cc\u586b\u5199\u793a\u4f8b\u6807\u9898",description:"\u8fd9\u91cc\u586b\u5199\u793a\u4f8b\u8bf4\u660e",code:'const { default: Icon } = _Icon;\nconst { Space, Slider, Typography } = antd;\nconst { useState } = React;\nconst { createWithFetch } = ReactFetch;\nconst { createWithRemoteLoader } = remoteLoader;\nconst { default: axios } = _axios;\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ["components-iconfont:ColorfulFont"],\n})(({ remoteModules }) => {\n  const [ColorfulFont] = remoteModules;\n  const [value, setValue] = useState(30);\n  return (\n    <Space direction="vertical">\n      <Space>\n        <div>\u8c03\u6574\u5927\u5c0f:</div>\n        <Slider\n          style={{ width: 100 }}\n          max={60}\n          min={12}\n          value={value}\n          onChange={setValue}\n        />\n        <div>{value}px</div>\n      </Space>\n      <ColorfulFont>\n        {({ list }) => (\n          <Space wrap align="top" size="large">\n            {list.map(({ name }) => {\n              return (\n                <Space\n                  className="item"\n                  direction="vertical"\n                  align="center"\n                  key={name}\n                >\n                  <Icon colorful type={name} size={value} />\n                  <Typography.Text\n                    copyable={{\n                      text:\n                        \'<Icon colorful type="\' +\n                        name +\n                        \'" size={\' +\n                        value +\n                        "} />",\n                    }}\n                  >\n                    {name}\n                  </Typography.Text>\n                </Space>\n              );\n            })}\n          </Space>\n        )}\n      </ColorfulFont>\n    </Space>\n  );\n});\n\nrender(<BaseExample />);\n\n',scope:[{name:"_Icon",packageName:"@kne/current-lib_react-icon",component:a},{name:"antd",packageName:"antd",component:o},{name:"ReactFetch",packageName:"@kne/react-fetch",component:c},{name:"_axios",packageName:"axios",component:r},{name:"remoteLoader",packageName:"@kne/remote-loader",component:i}]}]}}},s={name:"react-icon",version:"0.1.2","open-version":!0,"public-url":"/react-icon",modules:[{name:"react-icon",baseDir:"/home/runner/work/react-icon/react-icon",description:"\u7528\u4e8e\u5c06\u4e00\u4e2afont\u6216svg\u5c55\u793a\u4e3a\u4e00\u4e2a\u56fe\u6807\u7ec4\u4ef6.",packageName:"@kne/react-icon"}]}}}]);
//# sourceMappingURL=690.833a9ac4.chunk.js.map